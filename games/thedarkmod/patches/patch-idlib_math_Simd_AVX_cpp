$OpenBSD: patch-idlib_math_Simd_AVX_cpp,v 1.1.1.1 2019/09/02 18:04:40 thfr Exp $

simplify problematic AVX function

Index: idlib/math/Simd_AVX.cpp
--- idlib/math/Simd_AVX.cpp.orig
+++ idlib/math/Simd_AVX.cpp
@@ -38,6 +38,8 @@ idSIMD_AVX::CullByFrustum
 ============
 */
 void VPCALL idSIMD_AVX::CullByFrustum( idDrawVert *verts, const int numVerts, const idPlane frustum[6], byte *pointCull, float epsilon ) {
+	return idSIMD_SSE::CullByFrustum( verts, numVerts, frustum, pointCull, epsilon );
+	/*
 	const __m256 fA = _mm256_set_ps( 0, 0, frustum[5][0], frustum[4][0], frustum[3][0], frustum[2][0], frustum[1][0], frustum[0][0] );
 	const __m256 fB = _mm256_set_ps( 0, 0, frustum[5][1], frustum[4][1], frustum[3][1], frustum[2][1], frustum[1][1], frustum[0][1] );
 	const __m256 fC = _mm256_set_ps( 0, 0, frustum[5][2], frustum[4][2], frustum[3][2], frustum[2][2], frustum[1][2], frustum[0][2] );
@@ -63,6 +65,7 @@ void VPCALL idSIMD_AVX::CullByFrustum( idDrawVert *ver
 		pointCull[j] = (byte)mask_lo & mask6;
 	}
 	_mm256_zeroupper();
+	*/
 }
 
 /*
@@ -71,6 +74,8 @@ idSIMD_AVX::CullByFrustum2
 ============
 */
 void VPCALL idSIMD_AVX::CullByFrustum2( idDrawVert *verts, const int numVerts, const idPlane frustum[6], unsigned short *pointCull, float epsilon ) {
+	return idSIMD_SSE::CullByFrustum2( verts, numVerts, frustum, pointCull, epsilon );
+	/*
 	const __m256 fA = _mm256_set_ps( 0, 0, frustum[5][0], frustum[4][0], frustum[3][0], frustum[2][0], frustum[1][0], frustum[0][0] );
 	const __m256 fB = _mm256_set_ps( 0, 0, frustum[5][1], frustum[4][1], frustum[3][1], frustum[2][1], frustum[1][1], frustum[0][1] );
 	const __m256 fC = _mm256_set_ps( 0, 0, frustum[5][2], frustum[4][2], frustum[3][2], frustum[2][2], frustum[1][2], frustum[0][2] );
@@ -98,4 +103,5 @@ void VPCALL idSIMD_AVX::CullByFrustum2( idDrawVert *ve
 		pointCull[j] = (unsigned short)(mask_lo & mask6 | (mask_hi & mask6) << 6);
 	}
 	_mm256_zeroupper();
+	*/
 }
